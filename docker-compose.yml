version: '3.8'

services:
  postgres:
    image: postgres:16
    container_name: postgres-db-talk2notes
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: talk2notes  # Changed from myapp to talk2notes
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: redis-cache
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: ["redis-server", "--appendonly", "yes"]
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    # For local development, build from source:
    build:
      context: .
      dockerfile: Dockerfile
    # For production, you can use the Docker Hub image instead:
    # image: ugurunlu/talk2notes:latest  # Changed repository name
    container_name: talk2notes-app
    environment:
      # Database configuration
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/talk2notes  # Changed from myapp to talk2notes
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password

      # Redis configuration
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379

      # Spring profiles
      SPRING_PROFILES_ACTIVE: docker

      # CORS configuration
      CORS_ALLOWED_ORIGINS: "http://localhost:3000,http://localhost:4200,http://localhost:5173,http://host.docker.internal:3000,http://host.docker.internal:4200,http://host.docker.internal:5173"

      # JVM options
      JAVA_OPTS: "-Xms512m -Xmx512m"

    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network
    # Health check to ensure app is ready
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

    # Add restart policy for resilience
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data: